},
allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: Server {
    maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
    _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::5000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
},
_server: Server {
    maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
    _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      requestTimeout: 0,
      _connectionKey: '6::::5000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 14
},
parser: null,
  on: [Function (anonymous)],
  addListener: [Function (anonymous)],
  prependListener: [Function: prependListener],
setEncoding: [Function: socketSetEncoding],
_paused: false,
  _peername: { address: '::1', family: 'IPv6', port: 54444 },
timeout: 0,
  [Symbol(async_id_symbol)]: 53,
  [Symbol(kHandle)]: null,
  [Symbol(kSetNoDelay)]: true,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 953,
  [Symbol(kBytesWritten)]: 212,
  [Symbol(RequestTimeout)]: undefined
},
protocol: null,
  extensions: [],
  remoteAddress: '::1',
  closeReasonCode: 1006,
  closeDescription: 'Socket Error: read ECONNRESET',
  closeEventEmitted: true,
  maskOutgoingPackets: false,
  maskBytes: <Buffer c0 00 81 e7>,
frameHeader: <Buffer 88 82 8d ce cc 01 00 00 b8 2c>,
bufferList: BufferList {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    encoding: undefined,
    length: [Getter],
    write: [Function (anonymous)],
    end: [Function (anonymous)],
    push: [Function (anonymous)],
    forEach: [Function (anonymous)],
    join: [Function (anonymous)],
    joinInto: [Function (anonymous)],
    advance: [Function (anonymous)],
    take: [Function (anonymous)],
    toString: [Function (anonymous)],
    [Symbol(kCapture)]: false
},
currentFrame: WebSocketFrame {
    maskBytes: <Buffer c0 00 81 e7>,
    frameHeader: <Buffer 88 82 8d ce cc 01 00 00 b8 2c>,
    config: {
        httpServer: [Array],
        maxReceivedFrameSize: 65536,
        maxReceivedMessageSize: 1048576,
        fragmentOutgoingMessages: true,
        fragmentationThreshold: 16384,
        keepalive: true,
        keepaliveInterval: 20000,
        dropConnectionOnKeepaliveTimeout: true,
        keepaliveGracePeriod: 10000,
        useNativeKeepalive: false,
        assembleFragments: true,
        autoAcceptConnections: false,
        ignoreXForwardedFor: false,
        disableNagleAlgorithm: true,
        closeTimeout: 5000
    },
    maxReceivedFrameSize: 65536,
    protocolError: false,
    frameTooLarge: false,
    invalidCloseFrameLength: false,
    parseState: 1,
    closeStatus: -1
    },
    fragmentationSize: 0,
    frameQueue: [],
    connected: false,
    state: 'closed',
    waitingForCloseResponse: false,
    receivedEnd: false,
    closeTimeout: 5000,
    assembleFragments: true,
    maxReceivedMessageSize: 1048576,
    outputBufferFull: true,
    inputPaused: false,
    receivedDataHandler: [Function: bound ],
    _closeTimerHandler: [Function: bound ],
    _keepaliveTimerHandler: [Function: bound ],
    _keepaliveTimeoutID: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 62833,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 232,
        [Symbol(triggerId)]: 53
    },
    _gracePeriodTimerHandler: [Function: bound ],
    webSocketVersion: 13,
    remoteAddresses: [ '::1' ],
    _gracePeriodTimeoutID: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 59412,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 216,
        [Symbol(triggerId)]: 179
    },
    socketHadError: true,
    [Symbol(kCapture)]: false
    }
    sent Message to:  WebSocketConnection {
        _debug: [Function: debug] {
        namespace: 'websocket:connection',
        enabled: false,
        useColors: true,
        color: 2,
        inspectOpts: {},
        printOutput: [Function (anonymous)]
    },
        _events: [Object: null prototype] {
        newListener: [Function (anonymous)],
        removeListener: [Function (anonymous)],
        close: [Function: bound onceWrapper] { listener: [Function (anonymous)] },
        message: [Function (anonymous)]
    },
        _eventsCount: 4,
        _maxListeners: undefined,
        _pingListenerCount: 0,
        config: {
        httpServer: [ [Server] ],
        maxReceivedFrameSize: 65536,
        maxReceivedMessageSize: 1048576,
        fragmentOutgoingMessages: true,
        fragmentationThreshold: 16384,
        keepalive: true,
        keepaliveInterval: 20000,
        dropConnectionOnKeepaliveTimeout: true,
        keepaliveGracePeriod: 10000,
        useNativeKeepalive: false,
        assembleFragments: true,
        autoAcceptConnections: false,
        ignoreXForwardedFor: false,
        disableNagleAlgorithm: true,
        closeTimeout: 5000
    },
        socket: <ref *1> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: [],
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: false,
            constructed: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: false,
            errored: null,
            closed: false,
            closeEmitted: false,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
        },
            _events: [Object: null prototype] {
            end: [Array],
            close: [Array],
            error: [Function: bound ],
            drain: [Function: bound ],
            pause: [Function: bound ],
            resume: [Function: bound ],
            data: [Function: bound ]
        },
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: [Object],
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 1,
            constructed: true,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: false,
            closeEmitted: false,
            [Symbol(kOnFinished)]: []
        },
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: Server {
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 2,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 0,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 60000,
            requestTimeout: 0,
            _connectionKey: '6::::5000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(kCapture)]: false,
            [Symbol(async_id_symbol)]: 14
        },
            _server: Server {
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 2,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 0,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 60000,
            requestTimeout: 0,
            _connectionKey: '6::::5000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(kCapture)]: false,
            [Symbol(async_id_symbol)]: 14
        },
            parser: null,
            on: [Function (anonymous)],
            addListener: [Function (anonymous)],
            prependListener: [Function: prependListener],
            setEncoding: [Function: socketSetEncoding],
            _paused: false,
            _peername: { address: '::1', family: 'IPv6', port: 54488 },
            timeout: 0,
            [Symbol(async_id_symbol)]: 239,
            [Symbol(kHandle)]: TCP {
            reading: true,
            onconnection: null,
            _consumed: true,
            [Symbol(owner_symbol)]: [Circular *1]
        },
            [Symbol(kSetNoDelay)]: true,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(RequestTimeout)]: undefined
        },
        protocol: null,
        extensions: [],
        remoteAddress: '::1',
        closeReasonCode: -1,
        closeDescription: null,
        closeEventEmitted: false,
        maskOutgoingPackets: false,
        maskBytes: <Buffer 75 21 9d 53>,
        frameHeader: <Buffer 81 aa 7f 3e 01 00 00 00 46 6c>,
        bufferList: BufferList {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            encoding: undefined,
            length: [Getter],
            write: [Function (anonymous)],
            end: [Function (anonymous)],
            push: [Function (anonymous)],
            forEach: [Function (anonymous)],
            join: [Function (anonymous)],
            joinInto: [Function (anonymous)],
            advance: [Function (anonymous)],
            take: [Function (anonymous)],
            toString: [Function (anonymous)],
            [Symbol(kCapture)]: false
        },
        currentFrame: WebSocketFrame {
            maskBytes: <Buffer 75 21 9d 53>,
            frameHeader: <Buffer 81 aa 7f 3e 01 00 00 00 46 6c>,
            config: {
            httpServer: [Array],
            maxReceivedFrameSize: 65536,
            maxReceivedMessageSize: 1048576,
            fragmentOutgoingMessages: true,
            fragmentationThreshold: 16384,
            keepalive: true,
            keepaliveInterval: 20000,
            dropConnectionOnKeepaliveTimeout: true,
            keepaliveGracePeriod: 10000,
            useNativeKeepalive: false,
            assembleFragments: true,
            autoAcceptConnections: false,
            ignoreXForwardedFor: false,
            disableNagleAlgorithm: true,
            closeTimeout: 5000
        },
            maxReceivedFrameSize: 65536,
            protocolError: false,
            frameTooLarge: false,
            invalidCloseFrameLength: false,
            parseState: 1,
            closeStatus: -1
        },
        fragmentationSize: 0,
        frameQueue: [],
        connected: true,
        state: 'open',
        waitingForCloseResponse: false,
        receivedEnd: false,
        closeTimeout: 5000,
        assembleFragments: true,
        maxReceivedMessageSize: 1048576,
        outputBufferFull: false,
        inputPaused: false,
        receivedDataHandler: [Function: bound ],
        _closeTimerHandler: [Function: bound ],
        _keepaliveTimerHandler: [Function: bound ],
        _keepaliveTimeoutID: Timeout {
            _idleTimeout: 20000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 78151,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,

            C:\Users\Jaguar25\WebstormProjects\WebToolRunScripts>npm run server

            > webtoolrunscripts@1.0.0 server
            > nodemon server.js

            [nodemon] 2.0.6
            [nodemon] to restart at any time, enter `rs`
            [nodemon] watching path(s): *.*
            [nodemon] watching extensions: js,mjs,json
            [nodemon] starting `node server.js`
            (node:14548) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.
            (Use `node --trace-deprecation ...` to show where the warning was created)
            Server started on port 5000
            MongoDB Connected...
            Thu Nov 12 2020 13:42:19 GMT+0300 (Москва, стандартное время) Recieved a new connection from origin http://localhost:3000.
            connected: af6e556b-0810 in af6e556b-0810
            Thu Nov 12 2020 13:42:25 GMT+0300 (Москва, стандартное время) Recieved a new connection from origin http://localhost:3000.
            connected: fa69e59c-589a in af6e556b-0810,fa69e59c-589a
            Received Message:  {"type":"message","msg":"hello","user":""}
            sent Message to:  WebSocketConnection {
            _debug: [Function: debug] {
            namespace: 'websocket:connection',
            enabled: false,
            useColors: true,
            color: 2,
            inspectOpts: {},
            printOutput: [Function (anonymous)]
        },
            _events: [Object: null prototype] {
            newListener: [Function (anonymous)],
            removeListener: [Function (anonymous)],
            message: [Function (anonymous)]
        },
            _eventsCount: 3,
            _maxListeners: undefined,
            _pingListenerCount: 0,
            config: {
            httpServer: [ [Server] ],
            maxReceivedFrameSize: 65536,
            maxReceivedMessageSize: 1048576,
            fragmentOutgoingMessages: true,
            fragmentationThreshold: 16384,
            keepalive: true,
            keepaliveInterval: 20000,
            dropConnectionOnKeepaliveTimeout: true,
            keepaliveGracePeriod: 10000,
            useNativeKeepalive: false,
            assembleFragments: true,
            autoAcceptConnections: false,
            ignoreXForwardedFor: false,
            disableNagleAlgorithm: true,
            closeTimeout: 5000
        },
            socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: [],
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            constructed: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: true,
            emitClose: false,
            autoDestroy: true,
            destroyed: true,
            errored: [Error],
            closed: true,
            closeEmitted: true,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
        },
            _events: [Object: null prototype] {
            end: [Array],
            close: [Function: bound ],
            error: [Function: bound ],
            drain: [Function: bound ],
            pause: [Function: bound ],
            resume: [Function: bound ],
            data: [Function: bound ]
        },
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: true,
            destroyed: true,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 0,
            constructed: true,
            prefinished: true,
            errorEmitted: true,
            emitClose: false,
            autoDestroy: true,
            errored: [Error],
            closed: true,
            closeEmitted: true,
            [Symbol(kOnFinished)]: []
        },
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: Server {
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 0,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 60000,
            requestTimeout: 0,
            _connectionKey: '6::::5000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(kCapture)]: false,
            [Symbol(async_id_symbol)]: 14
        },
            _server: Server {
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 0,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 60000,
            requestTimeout: 0,
            _connectionKey: '6::::5000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(kCapture)]: false,
            [Symbol(async_id_symbol)]: 14
        },
            parser: null,
            on: [Function (anonymous)],
            addListener: [Function (anonymous)],
            prependListener: [Function: prependListener],
            setEncoding: [Function: socketSetEncoding],
            _paused: false,
            _peername: { address: '::1', family: 'IPv6', port: 54593 },
            timeout: 0,
            [Symbol(async_id_symbol)]: 38,
            [Symbol(kHandle)]: null,
            [Symbol(kSetNoDelay)]: true,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 893,
            [Symbol(kBytesWritten)]: 164,
            [Symbol(RequestTimeout)]: undefined
        },
            protocol: null,
            extensions: [],
            remoteAddress: '::1',
            closeReasonCode: 1006,
            closeDescription: 'Socket Error: read ECONNRESET',
            closeEventEmitted: true,
            maskOutgoingPackets: false,
            maskBytes: <Buffer 0f 1c ef b8>,
            frameHeader: <Buffer 88 82 3d af ff 01 00 00 78 94>,
            bufferList: BufferList {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                encoding: undefined,
                length: [Getter],
                write: [Function (anonymous)],
                end: [Function (anonymous)],
                push: [Function (anonymous)],
                forEach: [Function (anonymous)],
                join: [Function (anonymous)],
                joinInto: [Function (anonymous)],
                advance: [Function (anonymous)],
                take: [Function (anonymous)],
                toString: [Function (anonymous)],
                [Symbol(kCapture)]: false
            },
            currentFrame: WebSocketFrame {
                maskBytes: <Buffer 0f 1c ef b8>,
                frameHeader: <Buffer 88 82 3d af ff 01 00 00 78 94>,
                config: {
                    httpServer: [Array],
                    maxReceivedFrameSize: 65536,
                    maxReceivedMessageSize: 1048576,
                    fragmentOutgoingMessages: true,
                    fragmentationThreshold: 16384,
                    keepalive: true,
                    keepaliveInterval: 20000,
                    dropConnectionOnKeepaliveTimeout: true,
                    keepaliveGracePeriod: 10000,
                    useNativeKeepalive: false,
                    assembleFragments: true,
                    autoAcceptConnections: false,
                    ignoreXForwardedFor: false,
                    disableNagleAlgorithm: true,
                    closeTimeout: 5000
                },
                maxReceivedFrameSize: 65536,
                protocolError: false,
                frameTooLarge: false,
                invalidCloseFrameLength: false,
                parseState: 1,
                closeStatus: -1
                },
                fragmentationSize: 0,
                frameQueue: [],
                connected: false,
                state: 'closed',
                waitingForCloseResponse: false,
                receivedEnd: false,
                closeTimeout: 5000,
                assembleFragments: true,
                maxReceivedMessageSize: 1048576,
                outputBufferFull: true,
                inputPaused: false,
                receivedDataHandler: [Function: bound ],
                _closeTimerHandler: [Function: bound ],
                _keepaliveTimerHandler: [Function: bound ],
                _keepaliveTimeoutID: Timeout {
                    _idleTimeout: -1,
                    _idlePrev: null,
                    _idleNext: null,
                    _idleStart: 12533,
                    _onTimeout: null,
                    _timerArgs: undefined,
                    _repeat: null,
                    _destroyed: true,
                    [Symbol(refed)]: true,
                    [Symbol(kHasPrimitive)]: false,
                    [Symbol(asyncId)]: 122,
                    [Symbol(triggerId)]: 38
                },
                _gracePeriodTimerHandler: [Function: bound ],
                webSocketVersion: 13,
                remoteAddresses: [ '::1' ],
                socketHadError: true,
                [Symbol(kCapture)]: false
                }
                sent Message to:  WebSocketConnection {
                    _debug: [Function: debug] {
                    namespace: 'websocket:connection',
                    enabled: false,
                    useColors: true,
                    color: 2,
                    inspectOpts: {},
                    printOutput: [Function (anonymous)]
                },
                    _events: [Object: null prototype] {
                    newListener: [Function (anonymous)],
                    removeListener: [Function (anonymous)],
                    close: [Function: bound onceWrapper] { listener: [Function (anonymous)] },
                    message: [Function (anonymous)]
                },
                    _eventsCount: 4,
                    _maxListeners: undefined,
                    _pingListenerCount: 0,
                    config: {
                    httpServer: [ [Server] ],
                    maxReceivedFrameSize: 65536,
                    maxReceivedMessageSize: 1048576,
                    fragmentOutgoingMessages: true,
                    fragmentationThreshold: 16384,
                    keepalive: true,
                    keepaliveInterval: 20000,
                    dropConnectionOnKeepaliveTimeout: true,
                    keepaliveGracePeriod: 10000,
                    useNativeKeepalive: false,
                    assembleFragments: true,
                    autoAcceptConnections: false,
                    ignoreXForwardedFor: false,
                    disableNagleAlgorithm: true,
                    closeTimeout: 5000
                },
                    socket: <ref *1> Socket {
                        connecting: false,
                        _hadError: false,
                        _parent: null,
                        _host: null,
                        _readableState: ReadableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        buffer: BufferList { head: null, tail: null, length: 0 },
                        length: 0,
                        pipes: [],
                        flowing: true,
                        ended: false,
                        endEmitted: false,
                        reading: false,
                        constructed: true,
                        sync: false,
                        needReadable: true,
                        emittedReadable: false,
                        readableListening: false,
                        resumeScheduled: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        destroyed: false,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        defaultEncoding: 'utf8',
                        awaitDrainWriters: null,
                        multiAwaitDrain: false,
                        readingMore: true,
                        decoder: null,
                        encoding: null,
                        [Symbol(kPaused)]: false
                    },
                        _events: [Object: null prototype] {
                        end: [Array],
                        close: [Array],
                        error: [Function: bound ],
                        drain: [Function: bound ],
                        pause: [Function: bound ],
                        resume: [Function: bound ],
                        data: [Function: bound ]
                    },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: false,
                        defaultEncoding: 'utf8',
                        length: 0,
                        writing: false,
                        corked: 0,
                        sync: false,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: null,
                        writelen: 0,
                        afterWriteTickInfo: [Object],
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 1,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                    },
                        allowHalfOpen: true,
                        _sockname: null,
                        _pendingData: null,
                        _pendingEncoding: '',
                        server: Server {
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        _events: [Object: null prototype],
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _connections: 1,
                        _handle: [TCP],
                        _usingWorkers: false,
                        _workers: [],
                        _unref: false,
                        allowHalfOpen: true,
                        pauseOnConnect: false,
                        httpAllowHalfOpen: false,
                        timeout: 0,
                        keepAliveTimeout: 5000,
                        maxHeadersCount: null,
                        headersTimeout: 60000,
                        requestTimeout: 0,
                        _connectionKey: '6::::5000',
                        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                        [Symbol(ServerResponse)]: [Function: ServerResponse],
                        [Symbol(kCapture)]: false,
                        [Symbol(async_id_symbol)]: 14
                    },
                        _server: Server {
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        _events: [Object: null prototype],
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _connections: 1,
                        _handle: [TCP],
                        _usingWorkers: false,
                        _workers: [],
                        _unref: false,
                        allowHalfOpen: true,
                        pauseOnConnect: false,
                        httpAllowHalfOpen: false,
                        timeout: 0,
                        keepAliveTimeout: 5000,
                        maxHeadersCount: null,
                        headersTimeout: 60000,
                        requestTimeout: 0,
                        _connectionKey: '6::::5000',
                        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                        [Symbol(ServerResponse)]: [Function: ServerResponse],
                        [Symbol(kCapture)]: false,
                        [Symbol(async_id_symbol)]: 14
                    },
                        parser: null,
                        on: [Function (anonymous)],
                        addListener: [Function (anonymous)],
                        prependListener: [Function: prependListener],
                        setEncoding: [Function: socketSetEncoding],
                        _paused: false,
                        _peername: { address: '::1', family: 'IPv6', port: 54612 },
                        timeout: 0,
                        [Symbol(async_id_symbol)]: 129,
                        [Symbol(kHandle)]: TCP {
                        reading: true,
                        onconnection: null,
                        _consumed: true,
                        [Symbol(owner_symbol)]: [Circular *1]
                    },
                        [Symbol(kSetNoDelay)]: true,
                        [Symbol(lastWriteQueueSize)]: 0,
                        [Symbol(timeout)]: null,
                        [Symbol(kBuffer)]: null,
                        [Symbol(kBufferCb)]: null,
                        [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesRead)]: 0,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(RequestTimeout)]: undefined
                    },
                    protocol: null,
                    extensions: [],
                    remoteAddress: '::1',
                    closeReasonCode: -1,
                    closeDescription: null,
                    closeEventEmitted: false,
                    maskOutgoingPackets: false,
                    maskBytes: <Buffer 76 61 46 dd>,
                    frameHeader: <Buffer 81 aa 00 00 00 00 00 00 a2 8e>,
                    bufferList: BufferList {
                        _events: [Object: null prototype] {},
                        _eventsCount: 0,
                        _maxListeners: undefined,
                        encoding: undefined,
                        length: [Getter],
                        write: [Function (anonymous)],
                        end: [Function (anonymous)],
                        push: [Function (anonymous)],
                        forEach: [Function (anonymous)],
                        join: [Function (anonymous)],
                        joinInto: [Function (anonymous)],
                        advance: [Function (anonymous)],
                        take: [Function (anonymous)],
                        toString: [Function (anonymous)],
                        [Symbol(kCapture)]: false
                    },
                    currentFrame: WebSocketFrame {
                        maskBytes: <Buffer 76 61 46 dd>,
                        frameHeader: <Buffer 81 aa 00 00 00 00 00 00 a2 8e>,
                        config: {
                            httpServer: [Array],
                            maxReceivedFrameSize: 65536,
                            maxReceivedMessageSize: 1048576,
                            fragmentOutgoingMessages: true,
                            fragmentationThreshold: 16384,
                            keepalive: true,
                            keepaliveInterval: 20000,
                            dropConnectionOnKeepaliveTimeout: true,
                            keepaliveGracePeriod: 10000,
                            useNativeKeepalive: false,
                            assembleFragments: true,
                            autoAcceptConnections: false,
                            ignoreXForwardedFor: false,
                            disableNagleAlgorithm: true,
                            closeTimeout: 5000
                        },
                        maxReceivedFrameSize: 65536,
                        protocolError: false,
                        frameTooLarge: false,
                        invalidCloseFrameLength: false,
                        parseState: 1,
                        closeStatus: -1
                        },
                        fragmentationSize: 0,
                        frameQueue: [],
                        connected: true,
                        state: 'open',
                        waitingForCloseResponse: false,
                        receivedEnd: false,
                        closeTimeout: 5000,
                        assembleFragments: true,
                        maxReceivedMessageSize: 1048576,
                        outputBufferFull: false,
                        inputPaused: false,
                        receivedDataHandler: [Function: bound ],
                        _closeTimerHandler: [Function: bound ],
                        _keepaliveTimerHandler: [Function: bound ],
                        _keepaliveTimeoutID: Timeout {
                            _idleTimeout: 20000,
                            _idlePrev: [TimersList],
                            _idleNext: [TimersList],
                            _idleStart: 19133,
                            _onTimeout: [Function: bound ],
                            _timerArgs: undefined,
                            _repeat: null,
                            _destroyed: false,
                            [Symbol(refed)]: true,
                            [Symbol(kHasPrimitive)]: false,
                            [Symbol(asyncId)]: 212,
                            [Symbol(triggerId)]: 129
                        },
                        _gracePeriodTimerHandler: [Function: bound ],
                        webSocketVersion: 13,
                        remoteAddresses: [ '::1' ],
                        [Symbol(kCapture)]: false
                        }
